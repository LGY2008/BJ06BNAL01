<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1543548202324" stop="1543548303807">
  <name>test_login</name>
  <labels/>
  <test-cases>
    <test-case start="1543548202324" status="failed" stop="1543548225229">
      <name>TestLogin.test_login[18610453007-123456-itheima1-]</name>
      <failure>
        <message>AssertionError: assert 'itheima1' in 'itheima'
 +  where 'itheima' = &lt;bound method PageLogin.page_get_nickname of &lt;Page.page_login.PageLogin object at 0x03974D50&gt;&gt;()
 +    where &lt;bound method PageLogin.page_get_nickname of &lt;Page.page_login.PageLogin object at 0x03974D50&gt;&gt; = &lt;Page.page_login.PageLogin object at 0x03974D50&gt;.page_get_nickname
 +      where &lt;Page.page_login.PageLogin object at 0x03974D50&gt; = &lt;test_login.TestLogin object at 0x03974DB0&gt;.login</message>
        <stack-trace>self = &lt;test_login.TestLogin object at 0x03974DB0&gt;, username = '18610453007'
password = '123456', expect_result = 'itheima1', expect_toast = ''

    @allure.step("开始执行登录用例")
    @pytest.mark.parametrize("username,password,expect_result,expect_toast",get_data_txt())
    def test_login(self,username,password,expect_result,expect_toast):
        if expect_result:
            try:
                # 输入 用户名
                self.login.page_input_username(username)
                # 输入 密码
                self.login.page_input_password(password)
                # 点击 登录
                self.login.page_click_login_btn()
                # 获取 昵称 进行断言
&gt;               assert expect_result in self.login.page_get_nickname()
E               AssertionError: assert 'itheima1' in 'itheima'
E                +  where 'itheima' = &lt;bound method PageLogin.page_get_nickname of &lt;Page.page_login.PageLogin object at 0x03974D50&gt;&gt;()
E                +    where &lt;bound method PageLogin.page_get_nickname of &lt;Page.page_login.PageLogin object at 0x03974D50&gt;&gt; = &lt;Page.page_login.PageLogin object at 0x03974D50&gt;.page_get_nickname
E                +      where &lt;Page.page_login.PageLogin object at 0x03974D50&gt; = &lt;test_login.TestLogin object at 0x03974DB0&gt;.login

Scripts\test_login.py:46: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4736-MainThread"/>
        <label name="host" value="MS-20180906QJYH"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1543548202336" status="passed" stop="1543548204871">
          <name>点击我</name>
          <title>点击我</title>
          <attachments/>
          <steps/>
        </step>
        <step start="1543548204871" status="passed" stop="1543548207732">
          <name>点击 已有账号，去登录</name>
          <title>点击 已有账号，去登录</title>
          <attachments/>
          <steps/>
        </step>
        <step start="1543548207733" status="failed" stop="1543548225077">
          <name>开始执行登录用例</name>
          <title>开始执行登录用例</title>
          <attachments>
            <attachment source="f6d5fdba-93cf-40e7-9d25-dde7a735f808-attachment.png" title="失败原因请附件图：" type="image/png"/>
          </attachments>
          <steps>
            <step start="1543548207733" status="passed" stop="1543548209858">
              <name>输入 用户名</name>
              <title>输入 用户名</title>
              <attachments/>
              <steps/>
            </step>
            <step start="1543548209858" status="passed" stop="1543548212284">
              <name>输入 密码</name>
              <title>输入 密码</title>
              <attachments/>
              <steps/>
            </step>
            <step start="1543548212284" status="passed" stop="1543548212889">
              <name>点击登录</name>
              <title>点击登录</title>
              <attachments/>
              <steps/>
            </step>
            <step start="1543548212889" status="passed" stop="1543548216553">
              <name>获取登录昵称</name>
              <title>获取登录昵称</title>
              <attachments/>
              <steps/>
            </step>
          </steps>
        </step>
      </steps>
    </test-case>
    <test-case start="1543548225238" status="failed" stop="1543548263655">
      <name>TestLogin.test_login[18610453007 -12345611--\u767b\u5f55\u5bc6\u7801\u9519\u8bef]</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_login.TestLogin object at 0x039E3090&gt;, username = '18610453007 '
password = '12345611', expect_result = '', expect_toast = '登录密码错误'

    @allure.step("开始执行登录用例")
    @pytest.mark.parametrize("username,password,expect_result,expect_toast",get_data_txt())
    def test_login(self,username,password,expect_result,expect_toast):
        if expect_result:
            try:
                # 输入 用户名
                self.login.page_input_username(username)
                # 输入 密码
                self.login.page_input_password(password)
                # 点击 登录
                self.login.page_click_login_btn()
                # 获取 昵称 进行断言
                assert expect_result in self.login.page_get_nickname()
                # 点击 设置
                self.login.page_click_setting()
                # 拖拽  消息推送--》修改密码
                self.login.page_drag_and_drop()
                # 点击退出
                self.login.page_click_logout()
                # 确认退出
                self.login.page_click_logout_ok()
                # 点击 我
                self.login.page_click_me()
                # 点击 已有账号，去登录
                self.login.page_click_user_link()
            except:
                # 截图
                self.login.base_getImage()
                # 打开图片 并写入报告
                with open("./Image/faild.png","rb")as f:
                    allure.attach("失败原因请附件图：",f.read(),allure.attach_type.PNG)
                # 将捕获的异常 抛出
                raise
        else:
            try:
                # 输入 用户名
&gt;               self.login.page_input_username(username)

Scripts\test_login.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
c:\users\administrator\appdata\local\programs\python\python36-32\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
Page\page_login.py:17: in page_input_username
    self.base_input(Page.login_input_username,username)
Base\base.py:15: in base_input
    el=self.base_find_element(loc)
Base\base.py:8: in base_find_element
    return WebDriverWait(self.driver,timeout=timeout,poll_frequency=poll).until(lambda x:x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="71040161-b19c-4491-a5a9-ee61cb09c31b")&gt;
method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x0398BA08&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\users\administrator\appdata\local\programs\python\python36-32\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4736-MainThread"/>
        <label name="host" value="MS-20180906QJYH"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1543548225240" status="failed" stop="1543548263611">
          <name>开始执行登录用例</name>
          <title>开始执行登录用例</title>
          <attachments>
            <attachment source="ae9e0be9-1e4b-424e-a510-df16b6b9a643-attachment.png" title="失败原因请附件图：" type="image/png"/>
          </attachments>
          <steps>
            <step start="1543548225240" status="failed" stop="1543548255256">
              <name>输入 用户名</name>
              <title>输入 用户名</title>
              <attachments/>
              <steps/>
            </step>
          </steps>
        </step>
      </steps>
    </test-case>
    <test-case start="1543548263684" status="failed" stop="1543548303807">
      <name>TestLogin.test_login[itheimaa-12345611--\u6b64\u7528\u6237\u4e0d\u5b58\u5728]</name>
      <failure>
        <message>TimeoutException: Message: 
</message>
        <stack-trace>self = &lt;test_login.TestLogin object at 0x03A66850&gt;, username = 'itheimaa'
password = '12345611', expect_result = '', expect_toast = '此用户不存在'

    @allure.step("开始执行登录用例")
    @pytest.mark.parametrize("username,password,expect_result,expect_toast",get_data_txt())
    def test_login(self,username,password,expect_result,expect_toast):
        if expect_result:
            try:
                # 输入 用户名
                self.login.page_input_username(username)
                # 输入 密码
                self.login.page_input_password(password)
                # 点击 登录
                self.login.page_click_login_btn()
                # 获取 昵称 进行断言
                assert expect_result in self.login.page_get_nickname()
                # 点击 设置
                self.login.page_click_setting()
                # 拖拽  消息推送--》修改密码
                self.login.page_drag_and_drop()
                # 点击退出
                self.login.page_click_logout()
                # 确认退出
                self.login.page_click_logout_ok()
                # 点击 我
                self.login.page_click_me()
                # 点击 已有账号，去登录
                self.login.page_click_user_link()
            except:
                # 截图
                self.login.base_getImage()
                # 打开图片 并写入报告
                with open("./Image/faild.png","rb")as f:
                    allure.attach("失败原因请附件图：",f.read(),allure.attach_type.PNG)
                # 将捕获的异常 抛出
                raise
        else:
            try:
                # 输入 用户名
&gt;               self.login.page_input_username(username)

Scripts\test_login.py:70: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
c:\users\administrator\appdata\local\programs\python\python36-32\lib\site-packages\allure\common.py:62: in impl
    return func(*a, **kw)
Page\page_login.py:17: in page_input_username
    self.base_input(Page.login_input_username,username)
Base\base.py:15: in base_input
    el=self.base_find_element(loc)
Base\base.py:8: in base_find_element
    return WebDriverWait(self.driver,timeout=timeout,poll_frequency=poll).until(lambda x:x.find_element(*loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="71040161-b19c-4491-a5a9-ee61cb09c31b")&gt;
method = &lt;function Base.base_find_element.&lt;locals&gt;.&lt;lambda&gt; at 0x03A50F60&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

c:\users\administrator\appdata\local\programs\python\python36-32\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="4736-MainThread"/>
        <label name="host" value="MS-20180906QJYH"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1543548263688" status="failed" stop="1543548303763">
          <name>开始执行登录用例</name>
          <title>开始执行登录用例</title>
          <attachments>
            <attachment source="a74a0cf5-d873-47fc-b11e-22e54f5bcd5d-attachment.png" title="失败原因请附件图：" type="image/png"/>
          </attachments>
          <steps>
            <step start="1543548263688" status="failed" stop="1543548294172">
              <name>输入 用户名</name>
              <title>输入 用户名</title>
              <attachments/>
              <steps/>
            </step>
          </steps>
        </step>
      </steps>
    </test-case>
  </test-cases>
</ns0:test-suite>
